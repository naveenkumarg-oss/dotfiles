; HEADER: <type>(<scope>): <subject>, 50 chars --|

; BODY: optional, 72 chars --------------------------------------------|

; FOOTER(S): optional, 72 chars ---------------------------------------|
;   BREAKING CHANGE:
;   CLOSED ISSUES:

; COMMIT GUIDELINES: Conventional Commits + AngularJS style -----------|
; Types:
;   - chore: change the tools and libraries
;   - ci: change the build process
;   - docs: edit the documentation
;   - feat: add a new feature
;   - fix: patch a bug
;   - perf: optimize performance with a code change
;   - refactor: modify code but no fixes or new features
;   - revert: revert to a previous commit
;   - style: modify code without affecting its meaning
;   - test: add missing or correct existing tests
;   - wip: mark a feature branch as work in progress
;   - build: 

; Scope: (optional) noun describing a section of the codebase.
; Subject: imperative mood, start with lowercase, no ending punctuation.
; Breaking changes: `!` after type/scope or `BREAKING CHANGE` in footer.

; See https://cbea.ms/git-commit/
; See https://www.conventionalcommits.org/
; See https://github.com/angular/angular.js/blob/master/DEVELOPERS.md

; What makes a great commit message?
;    - Separate subject from body with a blank line
;    - Limit the subject line to 50 characters
;    - Capitalize the subject line
;    - Do not end the subject line with a period
;    - Use the imperative mood in the subject line
;    - Wrap the body at 72 characters
;    - Use the body to explain what and why vs. how

; Imperative mood means "as if giving a command or instruction".
; Git itself uses imperative verb form whenever it creates a commit on your behalf.
; It is little awkward at first.
; We're more used to speaking in the indicative mood, which is all about reporting facts or description of content - do not use such tone.

; To help, ask yourself:
; If applied, this commit will "<your-subject-line-here>. Then, drop first part and use just your-subject-line-here.